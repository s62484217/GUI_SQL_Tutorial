package GUIDemo1;

//import com.oracle.xmlns.internal.webservices.jaxws_databinding.JavaParam;
//import static javax.swing.JFrame.EXIT_ON_CLOSE;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import javax.swing.*;

public class GUIDemo1 {
    
    public static void main(String[] args) {
        
         final JTextField txtTableName = new JTextField();

         JLabel label = new JLabel("Label");
         
        //界面
        JFrame demo = new JFrame();
        demo.setSize(1000, 1000);
        demo.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        demo.getContentPane().setLayout(new FlowLayout());
        Container cp = demo.getContentPane();
        cp.setLayout(null);   //取消貼邊緣

        //建立動作
        Action creatAction = new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SQLiteJDBCHelper aSQLite = new SQLiteJDBCHelper();
                aSQLite.createSQL(txtTableName.getText());

            }
        };

        Action insertAction = new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SQLiteJDBCHelper bSQLite = new SQLiteJDBCHelper();
                bSQLite.insertSQL(txtTableName.getText());
                label.setText("insertAction");
            }
        };

        Action queryAction = new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SQLiteJDBCHelper cSQLite = new SQLiteJDBCHelper();
                ArrayList<String> answer = (ArrayList<String>) cSQLite.selectSQL(txtTableName.getText());

                label.setText(htmlString(answer));
            }
        };

        Action updateAction = new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SQLiteJDBCHelper dSQLite = new SQLiteJDBCHelper();
                ArrayList<String> answer = (ArrayList<String>) dSQLite.updateSQL(txtTableName.getText());

                label.setText(htmlString(answer));
            }
        };

        Action delectAction = new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SQLiteJDBCHelper eSQLite = new SQLiteJDBCHelper();
                ArrayList<String> answer = (ArrayList<String>) eSQLite.deleteSQL(txtTableName.getText());
             
                label.setText(htmlString(answer));
            }
        };


        JButton creatButton = new JButton(creatAction);
        creatButton.setBounds(5, 5, 180, 50);
        demo.add(creatButton);
        creatButton.setText("CreateTable");

        JButton insertButton = new JButton(insertAction);
        insertButton.setBounds(380, 5, 100, 50);
        demo.add(insertButton);
        insertButton.setText("Insert");

        txtTableName.setText("tablename");
        txtTableName.setBounds(5, 60, 100, 50);
        demo.add(txtTableName);

        JButton selectButton = new JButton(queryAction);
        selectButton.setBounds(380, 60, 100, 50);
        demo.add(selectButton);
        selectButton.setText("Query");

        JButton updateButton = new JButton(updateAction);
        updateButton.setBounds(380, 120, 100, 50);
        demo.add(updateButton);
        updateButton.setText("Update");

        JButton deleteButton = new JButton(delectAction);
        deleteButton.setBounds(380, 180, 100, 50);
        demo.add(deleteButton);
        deleteButton.setText("Delete");

        label.setBounds(5, 120, 800, 800);
        demo.add(label);



        demo.setVisible(true);
    }

    
    public static String htmlString(ArrayList<String> array) {
   
        String sum = "";
   
                for (int i = 0; i < array.size(); i++) {
                    sum += array.get(i);
                    sum += "<br>";
            };
                
        return "<html>"+ sum + "</html>";
    }

}
